# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = nefelibata
description = A blog engine focusing on data ownership and persistence.
author = Beto Dealmeida
author_email = roberto@dealmeida.net
license = MIT
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/betodealmeida/nefelibata/
# Add here related links, for example:
project_urls =
    Documentation = https://nefelibata.readthedocs.io/
    Source = https://github.com/betodealmeida/nefelibata/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
    Tracker = https://github.com/betodealmeida/nefelibata/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Environment :: Web Environment
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.9

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    docopt==0.6.2
    rich>=10.9.0,<11
    PyYAML>=5.4.1,<7
    pydantic>=1.8.2,<2
    werkzeug>=2.0.1,<3
    mutagen>=1.45.1,<2
    jinja2>=2.0.1,<3
    marko>=1.1.0,<2
    mastodon.py>=1.5.1,<2
    aiohttp>=3.7.4.post0,<4
    aiogemini==0.2.0
    yarl>=1.6.3,<2
    piexif>=1.1.3,<2
    Pillow>=8.3.2,<9
    boto3>=1.18.53,<2
    beautifulsoup4>=4.10.0,<5
    icalendar>=4.0.8,<5
    mf2py>=1.1.2,<2
    caldav==0.8.0

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install nefelibata[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    pytest>=6.2.5,<7
    pytest-cov>=2.12.1,<3
    pytest-mock>=3.6.1,<4
    pyfakefs>=4.5.1,<5
    pre-commit>=2.15.0,<3
    freezegun>=1.1.0,<2
    pytest-asyncio==0.15.1
    codespell>=2.1.0,<3
    pip-tools>=6.4.0,<7
docs =
    sphinx>=4.1.2,<5

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = nefelibata.module:function
# For example:
# console_scripts =
#     fibonacci = nefelibata.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension
console_scripts =
    nb = nefelibata.console:run
nefelibata.announcer =
    antenna = nefelibata.announcers.antenna:AntennaAnnouncer
    archive_blog = nefelibata.announcers.archive_blog:ArchiveBlogAnnouncer
    capcom = nefelibata.announcers.capcom:CAPCOMAnnouncer
    geminispace = nefelibata.announcers.geminispace:GeminispaceAnnouncer
    mastodon = nefelibata.announcers.mastodon:MastodonAnnouncer
    webmention = nefelibata.announcers.webmention:WebmentionAnnouncer
nefelibata.assistant =
    archive_links = nefelibata.assistants.archive_links:ArchiveLinksAssistant
    current_weather = nefelibata.assistants.current_weather:CurrentWeatherAssistant
    mirror_images = nefelibata.assistants.mirror_images:MirrorImagesAssistant
    news = nefelibata.assistants.news:NewsAssistant
    playlist = nefelibata.assistants.playlist:PlaylistAssistant
    reading_time = nefelibata.assistants.reading_time:ReadingTimeAssistant
    rsvp_calendar = nefelibata.assistants.rsvp_calendar:RSVPCalendarAssistant
nefelibata.builder =
    gemini = nefelibata.builders.gemini:GeminiBuilder
    html = nefelibata.builders.html:HTMLBuilder
nefelibata.publisher =
    command = nefelibata.publishers.command:CommandPublisher
    ftp = nefelibata.publishers.ftp:FTPPublisher
    s3 = nefelibata.publishers.s3:S3Publisher

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this py.test issue.
addopts =
    --cov nefelibata --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[coverage:report]
fail_under = 100

# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.2
package = nefelibata
extensions =
    no_skeleton
    pre_commit
